name: Build manifests and push

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - 'v*'

concurrency:
  group: ci-master
  cancel-in-progress: true

jobs:
  compile:
    runs-on: ubuntu-latest
    permissions:
      # To create an artifact
      actions: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Build manifests
        run: nix-shell --run './build.sh kubespray.jsonnet'
      - name: Archive manifests
        uses: actions/upload-artifact@v2
        if: ${{ success() }}
        with:
          name: manifests
          path: |
            LICENSE
            kustomization.yaml
            manifests/
          if-no-files-found: error
  # publish:
  #   permissions:
  #     actions: read
  #     contents: write
  #   needs: compile
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - name: Download manifests Artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: manifests
  push-to-branch:
    permissions:
      actions: read
      contents: write
    needs: compile
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download manifests Artifact
        uses: actions/download-artifact@v2
        with:
          name: manifests
      - name: Push to 'manifests' branch
        id: push-manifests
        env:
          BRANCH: manifests
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          RELEASE_TAG="release-$TAG"
          git init
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git symbolic-ref HEAD "refs/heads/${BRANCH}"
          git add .
          git commit -m "New manifest release for tag $TAG"
          git tag "$RELEASE_TAG"
          git push --force --atomic "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY.git" "HEAD:${BRANCH}" "$RELEASE_TAG"
          echo "::set-output name=RELEASE_BRANCH::$RELEASE_TAG"
      - name: Zip manifests
        run: zip -r manifests.zip kustomization.yaml LICENSE manifests
      - name: Release
        if: ${{ success() }}
        uses: softprops/action-gh-release@v1
        with:
          # Not supported yet
          # fail_on_unmatched_files: true
          tag_name: ${{ steps.push-manifests.outputs.RELEASE_BRANCH }}
          files: manifests.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
